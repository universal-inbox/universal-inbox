[package]
name = "universal-inbox-api"
version.workspace = true
edition.workspace = true
authors.workspace = true

[lib]
path = "src/lib.rs"
test = true
doctest = false

[[bin]]
path = "src/main.rs"
name = "universal-inbox-api"
test = false

[dependencies]
actix-cors = "0.7.0"
actix-jwt-authc = { git = "https://github.com/dax/actix-jwt-authc", rev = "d0467f2455d9bc1e5fd493c94c8e9544e9421162", features = [
  "session",
] }
actix-http = "3.0.0"
actix-session = { version = "0.10.0", features = ["cookie-session"] }
actix-web = "4.0.0"
actix-web-lab = { version = "0.23.0", features = ["spa"] }
anyhow = { workspace = true }
apalis = { git = "https://github.com/dax/apalis", rev = "84ffdb8563068ae2055e5ad6d7ce7074c4c0a500", default-features = false, features = ["redis", "tokio-comp", "tracing"] }
apalis-redis = { git = "https://github.com/dax/apalis", rev = "84ffdb8563068ae2055e5ad6d7ce7074c4c0a500" }
argon2 = { version = "0.5", features = ["std"] }
async-trait = "0.1.0"
base64 = "0.22"
cached = { version = "0.54.0", features = [
  "async_tokio_rt_multi_thread",
  "redis_tokio",
  "redis_connection_manager",
] }
chrono = { workspace = true, features = ["serde"] }
clap = { workspace = true }
color-backtrace = "0.6"
config = { version = "0.15.0", default-features = false, features = [
  "toml",
  "convert-case",
  "async",
] }
csp = "2.0.0"
email_address = { workspace = true }
enum_derive = { workspace = true }
enum-display = "0.1.0"
format_serde_error = { version = "0.3.0", default-features = false, features = [
  "serde_json",
  "colored",
  "graphemes_support",
] }
futures = "0.3.0"
graphql_client = "0.14.0"
hostname = "0.4.0"
http = { workspace = true }
itertools = { workspace = true }
jsonwebtoken = "9"
lettre = { version = "0.11.0", default-features = false, features = [
  "tokio1",
  "tokio1-rustls-tls",
  "tracing",
  "builder",
  "hostname",
  "pool",
  "smtp-transport",
] }
log = { workspace = true }
mailgen = "0.3.0"
once_cell = "1.20.0"
openidconnect = { workspace = true }
opentelemetry = { version = "0.27.0", features = ["trace", "logs"] }
opentelemetry_sdk = { version = "0.27.0", features = [
  "trace",
  "logs",
  "rt-tokio",
] }
opentelemetry-appender-tracing = "0.27.0"
opentelemetry-http = { version = "0.27.0", features = ["reqwest"] }
opentelemetry-otlp = { version = "0.27.0", features = [
  "http-proto",
  "grpc-tonic",
  "trace",
  "logs",
  "metrics",
  "reqwest-rustls",
  "tls",
  "tls-roots"
] }
rand = { version = "0.8", features = ["std_rng"] }
ring = "0.17.0"
redis = { version = "0.27.0", features = [
  "tokio-comp",
  "tokio-native-tls-comp",
  "connection-manager",
] }
regex = { workspace = true }
reqwest = { workspace = true, features = ["rustls-tls", "gzip"] }
reqwest-middleware = { version = "0.4.0", features = ["json"] }
reqwest-tracing = { version = "0.5.0", features = ["opentelemetry_0_24"] }
rustls = { version = "0.23.0" } # Used to initialize lettre
secrecy = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true, features = ["unbounded_depth"] }
serde_with = { workspace = true }
slack-blocks-render = { workspace = true }
slack-morphism = { workspace = true, features = ["hyper"] }
sqlx = { version = "0.8.0", default-features = false, features = [
  "runtime-tokio-rustls",
  "macros",
  "postgres",
  "uuid",
  "chrono",
  "migrate",
  "json",
] }
thiserror = { workspace = true }
tokio = { version = "1.0", features = ["macros", "rt-multi-thread"] }
tonic = { version = "0.12.3", features = ["tls", "tls-roots", "gzip"] }
tracing = { version = "0.1.0", features = ["log"] }
tracing-actix-web = { git = "https://github.com/omid/tracing-actix-web", rev = "00e9e15ed96d661e5bada371290031814c004522", features = [
  "emit_event_on_error",
  "opentelemetry_0_24",
] }
tracing-log = "0.2.0"
tracing-opentelemetry = { version = "0.28.0", features = ["tracing-log"] }
tracing-subscriber = { version = "0.3.0", features = [
  "std",
  "env-filter",
  "fmt",
  "json",
] }
universal-inbox = { path = ".." }
url = { workspace = true, features = ["serde"] }
uuid = { workspace = true, features = ["serde"] }
validator = { workspace = true }
tokio-retry = "0.3.0"
vec1 = { workspace = true }
wiremock = "0.6.0"

[dev-dependencies]
httpmock = { git = "https://github.com/dax/httpmock", rev = "334aa67d402a11054f7f942b9df5b2f53ff773d1" }
pretty_assertions = { workspace = true }
rstest = { workspace = true }
serde_urlencoded = { workspace = true }

[package.metadata.cargo-machete]
ignored = ["opentelemetry-http", "opentelemetry_http"]
