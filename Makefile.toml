[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = "true"
CARGO_MAKE_COVERAGE_PROVIDER = "tarpaulin"
CARGO_MAKE_CLIPPY_ARGS = "--tests -- -D warnings"

[tasks.default]
clear = true
alias = "watch"

[tasks.test]
install_crate = "cargo-nextest"
args = [
  "nextest",
  "run",
  "@@remove-empty(CARGO_MAKE_CARGO_VERBOSE_FLAGS)",
  "@@split(CARGO_MAKE_CARGO_BUILD_TEST_FLAGS, )",
]

[tasks.audit]
condition = {}
workspace = false

[tasks.run-api]
command = "bash"
args = ["-c", "cd api; cargo make run"]
workspace = false
watch = { watch = ["./api/"], no_git_ignore = true }

[tasks.run-web]
command = "bash"
args = ["-c", "cd web; cargo make run"]
workspace = false

[tasks.run]
run_task = { name = ["run-api", "run-web"], parallel = true, fork = true }
workspace = false

[tasks.watch-api]
command = "bash"
args = ["-c", "cd api; cargo make dev-test-flow"]
workspace = false
watch = { watch = ["./api/"], no_git_ignore = true }

[tasks.watch-web]
command = "bash"
args = ["-c", "cd web; cargo make dev-test-flow"]
workspace = false
watch = { watch = ["./web/"], no_git_ignore = true }

[tasks.watch-root]
watch = { watch = ["./src/"], no_git_ignore = true }
run_task = "dev-test-flow"
workspace = false

[tasks.watch]
run_task = { name = [
  "watch-api",
  "watch-web",
  "watch-root",
], parallel = true, fork = true }
workspace = false
